import{_ as a,c as e,o as s,d as n}from"./app.72258d38.js";const t="/terraform-aws-terra3/assets/61734921.7d3186cc.png",l="/terraform-aws-terra3/assets/62816257.97cebe6e.png",o="/terraform-aws-terra3/assets/61997065.0f96e0d0.png",D=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[{"level":3,"title":"Clone the repo","slug":"clone-the-repo","link":"#clone-the-repo","children":[]}]},{"level":2,"title":"Deployment Steps for Example 1","slug":"deployment-steps-for-example-1","link":"#deployment-steps-for-example-1","children":[{"level":3,"title":"Terraform INIT","slug":"terraform-init","link":"#terraform-init","children":[]},{"level":3,"title":"Terraform PLAN","slug":"terraform-plan","link":"#terraform-plan","children":[]},{"level":3,"title":"Terraform APPLY","slug":"terraform-apply","link":"#terraform-apply","children":[]}]},{"level":2,"title":"Validation","slug":"validation","link":"#validation","children":[]},{"level":2,"title":"Finalization","slug":"finalization","link":"#finalization","children":[]},{"level":2,"title":"Deployment Steps for Example 2","slug":"deployment-steps-for-example-2","link":"#deployment-steps-for-example-2","children":[{"level":3,"title":"Terraform INIT","slug":"terraform-init-1","link":"#terraform-init-1","children":[]},{"level":3,"title":"Terraform PLAN","slug":"terraform-plan-1","link":"#terraform-plan-1","children":[]},{"level":3,"title":"Terraform APPLY","slug":"terraform-apply-1","link":"#terraform-apply-1","children":[]}]},{"level":2,"title":"Validation","slug":"validation-1","link":"#validation-1","children":[]},{"level":2,"title":"Finalization","slug":"finalization-1","link":"#finalization-1","children":[]},{"level":2,"title":"Deployment Steps for Example 3","slug":"deployment-steps-for-example-3","link":"#deployment-steps-for-example-3","children":[{"level":3,"title":"Terraform INIT","slug":"terraform-init-2","link":"#terraform-init-2","children":[]},{"level":3,"title":"Update Route53 Hosted Zone Id","slug":"update-route53-hosted-zone-id","link":"#update-route53-hosted-zone-id","children":[]},{"level":3,"title":"Terraform PLAN","slug":"terraform-plan-2","link":"#terraform-plan-2","children":[]},{"level":3,"title":"Terraform APPLY","slug":"terraform-apply-2","link":"#terraform-apply-2","children":[]}]},{"level":2,"title":"Validation","slug":"validation-2","link":"#validation-2","children":[]},{"level":2,"title":"Finalization","slug":"finalization-2","link":"#finalization-2","children":[]}],"relativePath":"getting-started.md","lastUpdated":1666201448000}'),r={name:"getting-started.md"},p=n(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><p>This getting started guide will help you deploy your first environment using Terra3. This guide is split across three steps:</p><ol><li><p>Deploying a static website served from an S3 bucket and AWS Cloudfront</p></li><li><p>Deploying all from step 1 + an nginx demo container on AWS ECS</p></li><li><p>Deploying all from step 1 &amp; 2 + providing your own domain name and enabling TLS between Cloudfront and the Application Loadbalancer</p></li></ol><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a></h2><p>First, ensure that you have installed the following tools locally.</p><ol><li><p><a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html" target="_blank" rel="noreferrer">aws cli</a></p></li><li><p><a href="https://learn.hashicorp.com/tutorials/terraform/install-cli" target="_blank" rel="noreferrer">terraform</a></p></li></ol><h3 id="clone-the-repo" tabindex="-1">Clone the repo <a class="header-anchor" href="#clone-the-repo" aria-hidden="true">#</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">git clone https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">//github.com/it-objects/terraform-aws-terra3.git</span></span>
<span class="line"></span></code></pre></div><h2 id="deployment-steps-for-example-1" tabindex="-1">Deployment Steps for Example 1 <a class="header-anchor" href="#deployment-steps-for-example-1" aria-hidden="true">#</a></h2><p>Example 1 will provision a subset of the overall 3-tier architecture, namely</p><ul><li>the static website served from an S3 bucket and AWS Cloudfront</li></ul><p>as depicted in this diagram:</p><p><img src="`+t+`" alt=""></p><h3 id="terraform-init" tabindex="-1">Terraform INIT <a class="header-anchor" href="#terraform-init" aria-hidden="true">#</a></h3><p>CD into the examples directory:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">cd terraform</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">aws</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">terra3</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">examples</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">example_1</span></span>
<span class="line"></span></code></pre></div><p>Initialize the working directory with the following:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform init</span></span>
<span class="line"></span></code></pre></div><h3 id="terraform-plan" tabindex="-1">Terraform PLAN <a class="header-anchor" href="#terraform-plan" aria-hidden="true">#</a></h3><p>Verify the resources that will be created by this execution:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform plan</span></span>
<span class="line"></span></code></pre></div><h3 id="terraform-apply" tabindex="-1">Terraform APPLY <a class="header-anchor" href="#terraform-apply" aria-hidden="true">#</a></h3><p>Let\u2019s provision this example.</p><p>Note: make sure that the AWS CLI is correctly configured and that you\u2019re deploying to the right AWS account.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform apply</span></span>
<span class="line"></span></code></pre></div><h2 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-hidden="true">#</a></h2><p>After about 30-60 seconds, the script has been applied and a Cloudfront URL is shown similar to this one:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">cloudfront_default_domain_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dcot74k2131h8.cloudfront.net</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>Use it in your browser to test the static website deployed to S3 and served via Cloudfront.</p><p>Please note: it requires another 30 seconds, until the Cloudfront distribution is ready and the website is presented correctly.</p><p>It could look something like this when you use the command line tool \u201Ccurl\u201D to query the URL:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">\u276F curl https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">//dcot74k2131h8.cloudfront.net  </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">Hello</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Terra3</span><span style="color:#89DDFF;">!&lt;/</span><span style="color:#A6ACCD;">h1</span><span style="color:#89DDFF;">&gt;%</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"></span></code></pre></div><p>Go to the S3 section in your AWS web console and find the S3 bucket with the index.html file. Feel free, to edit the file and see the change being reflected when reloading the page in your browser.</p><h2 id="finalization" tabindex="-1">Finalization <a class="header-anchor" href="#finalization" aria-hidden="true">#</a></h2><p>To clean up your AWS account, issue the following command which will remove all previously provisioned AWS resources.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform destroy</span></span>
<span class="line"></span></code></pre></div><h2 id="deployment-steps-for-example-2" tabindex="-1">Deployment Steps for Example 2 <a class="header-anchor" href="#deployment-steps-for-example-2" aria-hidden="true">#</a></h2><p>Example 2 will provision a more advanced subset of the overall 3-tier architecture, namely</p><ul><li><p>the static website served from an S3 bucket and AWS Cloudfront and</p></li><li><p>an ECS task with two containers</p></li></ul><p>as depicted in this diagram:</p><p><img src="`+l+`" alt=""></p><h3 id="terraform-init-1" tabindex="-1">Terraform INIT <a class="header-anchor" href="#terraform-init-1" aria-hidden="true">#</a></h3><p>CD into the examples directory:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">cd terraform</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">aws</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">terra3</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">examples</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">example_2</span></span>
<span class="line"></span></code></pre></div><p>Initialize the working directory with the following:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform init</span></span>
<span class="line"></span></code></pre></div><h3 id="terraform-plan-1" tabindex="-1">Terraform PLAN <a class="header-anchor" href="#terraform-plan-1" aria-hidden="true">#</a></h3><p>Verify the resources that will be created by this execution:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform plan</span></span>
<span class="line"></span></code></pre></div><h3 id="terraform-apply-1" tabindex="-1">Terraform APPLY <a class="header-anchor" href="#terraform-apply-1" aria-hidden="true">#</a></h3><p>Let\u2019s provision the first example.</p><p>Note: make sure that the AWS CLI is correctly configured and that you\u2019re deploying to the right AWS account.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform apply</span></span>
<span class="line"></span></code></pre></div><h2 id="validation-1" tabindex="-1">Validation <a class="header-anchor" href="#validation-1" aria-hidden="true">#</a></h2><p>After about 4 minutes, the script has been applied and a Cloudfront URL is shown similar to this one:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">cloudfront_default_domain_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dcot74k2131h8.cloudfront.net</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>Use it in your browser to test the static website deployed to S3 and served via Cloudfront. Append \u201C/api/\u201D to the end of the URL to check that traffic is routed correctly to your nginxdemos/hello container via the application load balancer.</p><p>Please note: it requires another 30 seconds, until the Cloudfront distribution and the containers are ready and the website is presented correctly.</p><p>It could look something like this when you use the command line tool \u201Ccurl\u201D to query the URL:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">\u276F curl https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">//dcot74k2131h8.cloudfront.net  </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">Hello</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Terra3</span><span style="color:#89DDFF;">!&lt;/</span><span style="color:#A6ACCD;">h1</span><span style="color:#89DDFF;">&gt;%</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\u276F curl https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">//dcot74k2131h8.cloudfront.net/api/  </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#C792EA;">DOCTYPE</span><span style="color:#A6ACCD;"> html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">Hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">World</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"></span></code></pre></div><p>Go to the ECS section in your AWS web console and find the ECS cluster. You should be able to see the task with two containers you just have deployed. The</p><h2 id="finalization-1" tabindex="-1">Finalization <a class="header-anchor" href="#finalization-1" aria-hidden="true">#</a></h2><p>To clean up your AWS account, issue the following command which will remove all previously provisioned AWS resources.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform destroy</span></span>
<span class="line"></span></code></pre></div><h2 id="deployment-steps-for-example-3" tabindex="-1">Deployment Steps for Example 3 <a class="header-anchor" href="#deployment-steps-for-example-3" aria-hidden="true">#</a></h2><p>Example 3 will provision an even more advanced subset of the overall 3-tier architecture, namely</p><ul><li><p>the static website served from an S3 bucket and AWS Cloudfront and</p></li><li><p>an ECS task with two containers and</p></li><li><p>your own domain + certificates</p></li></ul><p>as depicted in this diagram:</p><p><img src="`+o+`" alt=""></p><p>A subdomain will be created named after the name of your solution (solution_name parameter). Also a second subdomain will be created for your loadbalancer so that we also achieve a transport encryption with TLS between Cloudfront and the Application Loadbalancer.</p><p><strong>Please note: there\u2019s a prerequisite to this example. A Route53 Hosted Zone needs to be provisioned into your account already, with a domain attached to it. The ID of the hosted zone is required as input parameter, so that the Terraform script can be executed.</strong></p><h3 id="terraform-init-2" tabindex="-1">Terraform INIT <a class="header-anchor" href="#terraform-init-2" aria-hidden="true">#</a></h3><p>CD into the examples directory:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">cd terraform</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">aws</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">terra3</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">examples</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">example_3</span></span>
<span class="line"></span></code></pre></div><p>Initialize the working directory with the following:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform init</span></span>
<span class="line"></span></code></pre></div><h3 id="update-route53-hosted-zone-id" tabindex="-1">Update Route53 Hosted Zone Id <a class="header-anchor" href="#update-route53-hosted-zone-id" aria-hidden="true">#</a></h3><p>As mentioned in the prerequisite to this example, please open the <a href="http://main.tf" target="_blank" rel="noreferrer">main.tf</a> file and enter the Route53 hosted zone ID.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">locals </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  route53_zone_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;PLEASE ENTER HERE THE HOSTED ZONE ID&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  solution_name   </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">terra3-example3</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="terraform-plan-2" tabindex="-1">Terraform PLAN <a class="header-anchor" href="#terraform-plan-2" aria-hidden="true">#</a></h3><p>Verify the resources that will be created by this execution:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform plan</span></span>
<span class="line"></span></code></pre></div><h3 id="terraform-apply-2" tabindex="-1">Terraform APPLY <a class="header-anchor" href="#terraform-apply-2" aria-hidden="true">#</a></h3><p>Let\u2019s provision the first example.</p><p>Note: make sure that the AWS CLI is correctly configured and that you\u2019re deploying to the right AWS account.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform apply</span></span>
<span class="line"></span></code></pre></div><h2 id="validation-2" tabindex="-1">Validation <a class="header-anchor" href="#validation-2" aria-hidden="true">#</a></h2><p>After about 30-60 seconds, the script has been applied and a Cloudfront URL is shown similar to this one:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">cloudfront_default_domain_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dcot74k2131h8.cloudfront.net</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>Use it in your browser to test the static website deployed to S3 and served via Cloudfront.</p><p>Please note: it requires another 30 seconds, until the Cloudfront distribution is ready and the website is presented correctly.</p><p>It could look something like this when you use the command line tool \u201Ccurl\u201D to query the URL:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">\u276F curl https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">//dcot74k2131h8.cloudfront.net  </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">Hello</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Terra3</span><span style="color:#89DDFF;">!&lt;/</span><span style="color:#A6ACCD;">h1</span><span style="color:#89DDFF;">&gt;%</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"></span></code></pre></div><p>Go to the S3 section in your AWS web console and find the S3 bucket with the index.html file. Feel free, to edit the file and see the change being reflected when reloading the page in your browser.</p><h2 id="finalization-2" tabindex="-1">Finalization <a class="header-anchor" href="#finalization-2" aria-hidden="true">#</a></h2><p>To clean up your AWS account, issue the following command which will remove all previously provisioned AWS resources.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#A6ACCD;">terraform destroy</span></span>
<span class="line"></span></code></pre></div>`,97),i=[p];function c(d,h,u,y,f,C){return s(),e("div",null,i)}const A=a(r,[["render",c]]);export{D as __pageData,A as default};
